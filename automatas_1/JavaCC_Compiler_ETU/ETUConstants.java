/* Generated By:JavaCC: Do not edit this line. ETUConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ETUConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PR_INICIO = 8;
  /** RegularExpression Id. */
  int PR_SI = 9;
  /** RegularExpression Id. */
  int PR_PARA = 10;
  /** RegularExpression Id. */
  int PR_MIENTRAS = 11;
  /** RegularExpression Id. */
  int PR_SINO = 12;
  /** RegularExpression Id. */
  int PR_IMPRIMIR = 13;
  /** RegularExpression Id. */
  int PR_ROMPER = 14;
  /** RegularExpression Id. */
  int PR_REGRESAR = 15;
  /** RegularExpression Id. */
  int PR_LEER = 16;
  /** RegularExpression Id. */
  int PR_HACER = 17;
  /** RegularExpression Id. */
  int DEL_PUNTOYCOMA = 18;
  /** RegularExpression Id. */
  int DEL_LLAVE_ABRE = 19;
  /** RegularExpression Id. */
  int DEL_LLAVE_CIERRA = 20;
  /** RegularExpression Id. */
  int DEL_PARENTESIS_ABRE = 21;
  /** RegularExpression Id. */
  int DEL_PARENTESIS_CIERRA = 22;
  /** RegularExpression Id. */
  int DEL_COMA = 23;
  /** RegularExpression Id. */
  int DEL_DOSPUNTOS = 24;
  /** RegularExpression Id. */
  int DEL_GATO = 25;
  /** RegularExpression Id. */
  int DEL_QUE = 26;
  /** RegularExpression Id. */
  int DEL_QUEE = 27;
  /** RegularExpression Id. */
  int OP_ADD = 28;
  /** RegularExpression Id. */
  int OP_SUB = 29;
  /** RegularExpression Id. */
  int OP_MUL = 30;
  /** RegularExpression Id. */
  int OP_DIV = 31;
  /** RegularExpression Id. */
  int OP_MOD = 32;
  /** RegularExpression Id. */
  int OP_ASIG = 33;
  /** RegularExpression Id. */
  int OP_PESO = 34;
  /** RegularExpression Id. */
  int OP_POT = 35;
  /** RegularExpression Id. */
  int OP_MENOR = 36;
  /** RegularExpression Id. */
  int OP_MAYOR = 37;
  /** RegularExpression Id. */
  int OP_MENOR_IGUAL = 38;
  /** RegularExpression Id. */
  int OP_MAYOR_IGUAL = 39;
  /** RegularExpression Id. */
  int OP_IGUAL = 40;
  /** RegularExpression Id. */
  int OP_DIF = 41;
  /** RegularExpression Id. */
  int OP_AND = 42;
  /** RegularExpression Id. */
  int OP_OR = 43;
  /** RegularExpression Id. */
  int OP_NEG = 44;
  /** RegularExpression Id. */
  int OP_INC = 45;
  /** RegularExpression Id. */
  int OP_DEC = 46;
  /** RegularExpression Id. */
  int T_CADENA = 47;
  /** RegularExpression Id. */
  int T_ENT = 48;
  /** RegularExpression Id. */
  int T_DEC = 49;
  /** RegularExpression Id. */
  int T_VF = 50;
  /** RegularExpression Id. */
  int VAL_CADENA = 51;
  /** RegularExpression Id. */
  int VAL_ENT = 52;
  /** RegularExpression Id. */
  int VAL_DEC = 53;
  /** RegularExpression Id. */
  int VAL_VF = 54;
  /** RegularExpression Id. */
  int ID = 55;
  /** RegularExpression Id. */
  int NO_VALIDO = 56;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int DentroComentario2 = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"/*\"",
    "<token of kind 6>",
    "\"*/\"",
    "\"inicio\"",
    "\"si\"",
    "\"para\"",
    "\"mientras\"",
    "\"sino\"",
    "\"imprimir\"",
    "\"romper\"",
    "\"regresar\"",
    "\"leer\"",
    "\"hacer\"",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\":\"",
    "\"#\"",
    "\"\\u00c2\\u00bf\"",
    "\"?\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\"$\"",
    "\"^\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"++\"",
    "\"--\"",
    "\"cadena\"",
    "\"ent\"",
    "\"dec\"",
    "\"vf\"",
    "<VAL_CADENA>",
    "<VAL_ENT>",
    "<VAL_DEC>",
    "<VAL_VF>",
    "<ID>",
    "<NO_VALIDO>",
  };

}
