/* Generated By:JavaCC: Do not edit this line. MCVillCompilerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MCVillCompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int S_SUMA = 9;
  /** RegularExpression Id. */
  int S_MULTIPLICA = 10;
  /** RegularExpression Id. */
  int S_LLAVE_A = 11;
  /** RegularExpression Id. */
  int S_LLAVE_C = 12;
  /** RegularExpression Id. */
  int S_PUNTO = 13;
  /** RegularExpression Id. */
  int S_CORCHETE_A = 14;
  /** RegularExpression Id. */
  int S_CORCHETE_C = 15;
  /** RegularExpression Id. */
  int S_PAREN_A = 16;
  /** RegularExpression Id. */
  int S_PAREN_C = 17;
  /** RegularExpression Id. */
  int S_COMA = 18;
  /** RegularExpression Id. */
  int S_PUNTO_COMA = 19;
  /** RegularExpression Id. */
  int OA_RESTA = 20;
  /** RegularExpression Id. */
  int OA_DIVICION = 21;
  /** RegularExpression Id. */
  int OA_POTENCIA = 22;
  /** RegularExpression Id. */
  int OA_MOD_DIV = 23;
  /** RegularExpression Id. */
  int OC_IGUAL_QUE = 24;
  /** RegularExpression Id. */
  int OC_DIFERENTE_DE = 25;
  /** RegularExpression Id. */
  int OC_MENOR_QUE = 26;
  /** RegularExpression Id. */
  int OC_MAYOR_QUE = 27;
  /** RegularExpression Id. */
  int OC_MENOR_O_IGUAL = 28;
  /** RegularExpression Id. */
  int OC_MAYOR_O_IGUAL = 29;
  /** RegularExpression Id. */
  int OC_IGUALDAD_WHEN = 30;
  /** RegularExpression Id. */
  int OC_COMBINADO = 31;
  /** RegularExpression Id. */
  int OC_QUESTION = 32;
  /** RegularExpression Id. */
  int OAS_ASIGNA = 33;
  /** RegularExpression Id. */
  int ORA_RANGO = 34;
  /** RegularExpression Id. */
  int ORA_RANGO1 = 35;
  /** RegularExpression Id. */
  int OL_AND = 36;
  /** RegularExpression Id. */
  int OL_OR = 37;
  /** RegularExpression Id. */
  int OL_NOT = 38;
  /** RegularExpression Id. */
  int VAL_CADENA = 39;
  /** RegularExpression Id. */
  int VAL_CADENA2 = 40;
  /** RegularExpression Id. */
  int VAL_ENTERO = 41;
  /** RegularExpression Id. */
  int VAL_DECIMAL = 42;
  /** RegularExpression Id. */
  int ID_LOCAL = 43;
  /** RegularExpression Id. */
  int ID_INSTANCE = 44;
  /** RegularExpression Id. */
  int ID_CLASS = 45;
  /** RegularExpression Id. */
  int ID_GLOBAL = 46;
  /** RegularExpression Id. */
  int ID_BLOCK = 47;
  /** RegularExpression Id. */
  int ID_CONSTANT = 48;
  /** RegularExpression Id. */
  int S_SALTO = 49;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMENTARIO = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"=begin\"",
    "\"#\"",
    "\"=end\"",
    "\"\\n\"",
    "<token of kind 8>",
    "\"+\"",
    "\"*\"",
    "\"{\"",
    "\"}\"",
    "\".\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\"-\"",
    "\"/\"",
    "\"**\"",
    "\"%\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"===\"",
    "\"<=>\"",
    "\"?\"",
    "\"=\"",
    "\"..\"",
    "\"...\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "<VAL_CADENA>",
    "<VAL_CADENA2>",
    "<VAL_ENTERO>",
    "<VAL_DECIMAL>",
    "<ID_LOCAL>",
    "<ID_INSTANCE>",
    "<ID_CLASS>",
    "<ID_GLOBAL>",
    "<ID_BLOCK>",
    "<ID_CONSTANT>",
    "<S_SALTO>",
  };

}
